{"version":3,"file":"gerador-cnpj.js","sourceRoot":"","sources":["../../../src/cnpj/gerador-cnpj.ts"],"names":[],"mappings":"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","sourcesContent":["/* ============================\n   Gerador CNPJ Alfanumérico 2026\n   - Corpo: 12 caracteres [0-9A-Z] (ou apenas números)\n   - Dígitos verificadores: módulo 11 (somente numéricos)\n   - Máscara visual: ##.###.###/####-##\n   - Auto-regeneração: 10s + barra de progresso\n============================ */\n\nimport { IntervaloTemporizador, TamanhoIdentificador, TipoAviso } from \"../gerais/enums.js\";\nimport { CARACTERES_PERMITIDOS } from \"../gerais/constantes.js\";\nimport {\n  ElementosInterface,\n  HistoricoIdentificadores,\n  IdentificadorGerado,\n  Temporizadores,\n} from \"../gerais/tipos.js\";\nimport { htmlCookies, inicializarAvisoDeCookies } from \"../gerais/cookies.js\";\nimport { aplicarMascara } from \"./formatacao-cnpj.js\";\nimport {\n  calcularDigitoVerificador,\n  converterCaractereParaValor,\n  verificarSequenciaRepetida,\n  PESOS_DIGITOS,\n} from \"../cnpj/algoritmo-cnpj.js\";\nimport {\n  copiarTexto,\n  inicializarEfeitoOnda,\n  obterElementoObrigatorio,\n} from \"../interface/interface.js\";\nimport { exibirAviso } from \"../gerais/mensageria.js\";\n\n/**\n * @summary Classe responsável por agrupar regras de negócio e interação com a interface do gerador.\n */\nclass GeradorCnpj {\n  private cnpjAtual: string | null = null;\n  private readonly historico: HistoricoIdentificadores = { itens: [], limite: 100 };\n  private readonly temporizadores: Temporizadores = { inicioContagem: 0 };\n\n  /**\n   * @summary Inicializa a classe com os elementos de interface necessários.\n   * @param elementos Elementos HTML utilizados pela aplicação.\n   */\n  public constructor(private readonly elementos: ElementosInterface) {\n    this.configurarEventos();\n    inicializarEfeitoOnda();\n    this.inicializarHistorico();\n    this.gerarEExibirIdentificador();\n  }\n\n  /**\n   * @summary Configura todos os manipuladores de eventos da interface.\n   */\n  private configurarEventos(): void {\n    const { botaoGerar, botaoGerar10, botaoCopiar, botaoCopiarTodos, controleMascara } =\n      this.elementos;\n\n    botaoGerar.addEventListener(\"click\", () => {\n      this.tratarCliqueGerar();\n    });\n\n    botaoGerar10.addEventListener(\"click\", () => {\n      this.tratarCliqueGera10();\n    });\n\n    botaoCopiar.addEventListener(\"click\", () => {\n      void this.tratarCliqueCopiar();\n    });\n\n    botaoCopiarTodos?.addEventListener(\"click\", (evento) => {\n      evento.preventDefault();\n      void this.copiarTodos();\n    });\n\n    controleMascara?.addEventListener(\"change\", () => {\n      this.atualizarCampoResultado();\n      this.atualizarVisualHistorico();\n    });\n  }\n\n  /**\n   * @summary Manipula o clique no botão principal de geração de identificador.\n   */\n  private tratarCliqueGerar(): void {\n    try {\n      this.gerarEExibirIdentificador(true);\n    } catch (erro) {\n      this.cnpjAtual = null;\n      this.elementos.campoResultado.value = \"\";\n      console.error(erro);\n      exibirAviso(this.elementos.areaAviso, \"Erro inesperado ao gerar.\", TipoAviso.Erro);\n    }\n  }\n\n  /**\n   * @summary Manipula o clique no botão de geração em lote (+10).\n   */\n  private tratarCliqueGera10(): void {\n    try {\n      for (let i = 0; i < 10; i++) {\n        if (this.historico.itens.length >= this.historico.limite) {\n          exibirAviso(\n            this.elementos.areaAviso,\n            `Limite de ${this.historico.limite} CNPJs atingido. CALMAAAAA QUE O NAVEGADOR NUM GUENTA!!! 😅`,\n            TipoAviso.Erro,\n          );\n          break;\n        }\n        this.gerarEExibirIdentificador(true, 10);\n      }\n    } catch (erro) {\n      this.cnpjAtual = null;\n      this.elementos.campoResultado.value = \"\";\n      console.error(erro);\n      exibirAviso(this.elementos.areaAviso, \"Erro inesperado ao gerar.\", TipoAviso.Erro);\n    }\n  }\n\n  /**\n   * @summary Manipula o clique no botão de copiar o identificador atual.\n   */\n  private async tratarCliqueCopiar(): Promise<void> {\n    if (!this.cnpjAtual) {\n      exibirAviso(this.elementos.areaAviso, \"Nenhum CNPJ gerado para copiar\", TipoAviso.Erro);\n      return;\n    }\n\n    try {\n      const valorParaCopiar = this.elementos.controleMascara?.checked\n        ? aplicarMascara(this.cnpjAtual)\n        : this.cnpjAtual;\n      await copiarTexto(valorParaCopiar);\n      exibirAviso(\n        this.elementos.areaAviso,\n        `CNPJ copiado: ${valorParaCopiar}`,\n        TipoAviso.InfoAlternativo,\n      );\n    } catch (erro) {\n      console.error(erro);\n      exibirAviso(this.elementos.areaAviso, \"Falha ao copiar\", TipoAviso.Erro);\n    }\n  }\n\n  /**\n   * @summary Gera uma sequência base alfanumérica com o tamanho definido para o identificador.\n   * @returns Sequência composta por caracteres permitidos em letras maiúsculas.\n   */\n  private gerarCorpoAlfanumerico(): string {\n    let corpo = \"\";\n    for (let indice = 0; indice < TamanhoIdentificador.Corpo; indice++) {\n      const indiceCaractere = Math.floor(Math.random() * CARACTERES_PERMITIDOS.length);\n      corpo += CARACTERES_PERMITIDOS[indiceCaractere] ?? \"\";\n    }\n    return corpo;\n  }\n\n  /**\n   * @summary Gera uma sequência base exclusivamente numérica com o tamanho definido.\n   * @returns Sequência composta apenas por dígitos [0-9].\n   */\n  private gerarCorpoNumerico(): string {\n    let corpo = \"\";\n    for (let indice = 0; indice < TamanhoIdentificador.Corpo; indice++) {\n      corpo += Math.floor(Math.random() * 10).toString();\n    }\n    return corpo;\n  }\n\n  /**\n   * @summary Converte um caractere alfanumérico para o valor numérico esperado pelo módulo 11.\n   * @param caractere Caractere a ser convertido.\n   * @returns Valor numérico correspondente ao caractere informado.\n   */\n  // Reaproveitado de algoritmo-cnpj.ts via import\n\n  /**\n   * @summary Verifica se todos os caracteres da sequência são idênticos.\n   * @param valor Texto a ser avaliado.\n   * @returns Indica se a sequência está composta por um único caractere repetido.\n   */\n  // Reaproveitado de algoritmo-cnpj.ts via import\n\n  /**\n   * @summary Calcula um dígito verificador com base em valores e pesos informados.\n   * @param valores Vetor com os valores numéricos do identificador.\n   * @param pesos Pesos utilizados no cálculo do módulo 11.\n   * @returns Dígito verificador calculado conforme as regras do módulo 11.\n   */\n  // Reaproveitado de algoritmo-cnpj.ts via import\n\n  /**\n   * @summary Aplica a máscara visual padrão do CNPJ ao valor informado.\n   * @param valor Identificador puro com 14 caracteres.\n   * @returns Texto formatado conforme a máscara ##.###.###/####-##.\n   */\n  // Reaproveitado de formatacao-cnpj.ts via import\n\n  /**\n   * @summary Gera um identificador válido composto por corpo (alfa ou numérico) e dígitos verificadores.\n   * @returns Objeto com a versão pura e mascarada do identificador gerado.\n   */\n  private gerarIdentificadorValido(): IdentificadorGerado {\n    const limiteTentativas = 2_000;\n\n    for (let tentativa = 0; tentativa < limiteTentativas; tentativa++) {\n      const usarAlfanumerico = this.elementos.controleAlfanumerico?.checked !== false;\n      const corpo = usarAlfanumerico ? this.gerarCorpoAlfanumerico() : this.gerarCorpoNumerico();\n      if (verificarSequenciaRepetida(corpo)) {\n        continue;\n      }\n\n      const valores = Array.from(corpo).map((caractere) => converterCaractereParaValor(caractere));\n      const digitoUm = calcularDigitoVerificador(valores, PESOS_DIGITOS.primeiro);\n      const digitoDois = calcularDigitoVerificador([...valores, digitoUm], PESOS_DIGITOS.segundo);\n\n      const identificadorCompleto = `${corpo}${digitoUm}${digitoDois}`;\n      if (identificadorCompleto.length !== TamanhoIdentificador.Total) {\n        continue;\n      }\n      const padrao = usarAlfanumerico ? /^[0-9A-Z]{12}[0-9]{2}$/ : /^[0-9]{14}$/;\n      if (!padrao.test(identificadorCompleto)) {\n        continue;\n      }\n      if (verificarSequenciaRepetida(identificadorCompleto)) {\n        continue;\n      }\n\n      return {\n        puro: identificadorCompleto,\n        mascarado: aplicarMascara(identificadorCompleto),\n      };\n    }\n\n    throw new Error(\"Não foi possível gerar um identificador válido.\");\n  }\n\n  /**\n   * @summary Exibe um aviso temporário para o usuário com estilos adequados ao tipo.\n   * @param mensagem Texto exibido dentro do aviso.\n   * @param tipo Tipo do aviso a ser aplicado.\n   */\n  // Exibição de avisos reaproveitada via utilitário em ui.ts\n\n  /**\n   * @summary Copia um texto para a área de transferência do sistema.\n   * @param valor Texto que será copiado.\n   */\n  // Cópia para clipboard reaproveitada via utilitário em ui.ts\n\n  /**\n   * @summary Atualiza o campo principal de resultado considerando a máscara selecionada.\n   */\n  private atualizarCampoResultado(): void {\n    if (!this.cnpjAtual) {\n      return;\n    }\n\n    const { campoResultado, controleMascara } = this.elementos;\n    campoResultado.value = controleMascara?.checked\n      ? aplicarMascara(this.cnpjAtual)\n      : this.cnpjAtual;\n  }\n\n  /**\n   * @summary Gera um novo identificador, atualiza o campo de resultado e reinicia a contagem automática.\n   * @param disparoManual Indica se a geração foi solicitada manualmente pelo usuário.\n   */\n  private gerarEExibirIdentificador(disparoManual = false, disparoEmLote?: number): void {\n    // Impede novas gerações ao atingir o limite e interrompe a auto-regeneração\n    if (this.historico.itens.length >= this.historico.limite) {\n      exibirAviso(\n        this.elementos.areaAviso,\n        `Limite de ${this.historico.limite} CNPJs atingido. Não é possível gerar novos registros.`,\n        TipoAviso.Erro,\n      );\n\n      if (this.temporizadores.intervaloRegressivo !== undefined) {\n        window.clearInterval(this.temporizadores.intervaloRegressivo);\n      }\n\n      const { textoTempoRestante, barraProgresso } = this.elementos;\n      textoTempoRestante.textContent = \"Limite atingido\";\n      barraProgresso.style.transform = \"scaleX(0)\";\n      return;\n    }\n\n    const { campoResultado, controleMascara } = this.elementos;\n    const identificador = this.gerarIdentificadorValido();\n\n    this.cnpjAtual = identificador.puro;\n    campoResultado.value = controleMascara?.checked ? identificador.mascarado : identificador.puro;\n    this.adicionarAoHistorico(identificador.puro);\n\n    if (disparoManual)\n      exibirAviso(this.elementos.areaAviso, \"Novo CNPJ alfanumérico gerado\", TipoAviso.Sucesso);\n\n    if (disparoEmLote)\n      exibirAviso(\n        this.elementos.areaAviso,\n        `Novos ${disparoEmLote} CNPJs alfanuméricos gerados`,\n        TipoAviso.Sucesso,\n      );\n\n    this.temporizadores.inicioContagem = performance.now();\n    this.atualizarContagemRegressiva();\n\n    if (this.temporizadores.intervaloRegressivo !== undefined) {\n      window.clearInterval(this.temporizadores.intervaloRegressivo);\n    }\n\n    this.temporizadores.intervaloRegressivo = window.setInterval(\n      () => this.atualizarContagemRegressiva(),\n      IntervaloTemporizador.Atualizacao,\n    );\n  }\n\n  /**\n   * @summary Atualiza a contagem regressiva e o estado visual da barra de progresso.\n   */\n  private atualizarContagemRegressiva(): void {\n    const { textoTempoRestante, barraProgresso } = this.elementos;\n    const tempoDecorrido = performance.now() - this.temporizadores.inicioContagem;\n    const tempoRestante = IntervaloTemporizador.GeracaoAutomatica - tempoDecorrido;\n\n    if (tempoRestante <= 0) {\n      this.gerarEExibirIdentificador();\n      return;\n    }\n\n    textoTempoRestante.textContent = `Novo em ${(tempoRestante / 1_000).toFixed(1)}s`;\n    const fracaoRestante = Math.max(\n      0,\n      Math.min(1, 1 - tempoDecorrido / IntervaloTemporizador.GeracaoAutomatica),\n    );\n\n    barraProgresso.style.transform = `scaleX(${fracaoRestante})`;\n    barraProgresso.style.background = \"linear-gradient(to left, #bd93f9, #8b5cf6)\";\n  }\n\n  /**\n   * @summary Reinicia o histórico para o estado inicial vazio.\n   */\n  private inicializarHistorico(): void {\n    this.historico.itens = [];\n    this.atualizarVisualHistorico();\n  }\n\n  /**\n   * @summary Adiciona um novo identificador ao histórico, respeitando o limite configurado.\n   * @param novo Identificador puro recém-gerado.\n   */\n  private adicionarAoHistorico(novo: string): void {\n    if (this.historico.itens[0] === novo) {\n      return;\n    }\n\n    this.historico.itens.unshift(novo);\n    if (this.historico.itens.length > this.historico.limite) {\n      this.historico.itens.pop();\n    }\n    this.atualizarVisualHistorico();\n  }\n\n  /**\n   * @summary Renderiza o histórico de identificadores na interface.\n   */\n  private atualizarVisualHistorico(): void {\n    const { listaRecentes, controleMascara } = this.elementos;\n\n    if (!listaRecentes) {\n      this.atualizarEstadoBotaoCopiarTodos();\n      return;\n    }\n\n    listaRecentes.innerHTML = \"\";\n\n    this.historico.itens.forEach((puro) => {\n      const texto = controleMascara?.checked ? aplicarMascara(puro) : puro;\n      const item = document.createElement(\"li\");\n      item.className =\n        \"flex items-center justify-between gap-3 rounded-md ring-2 ring-slate-100 dark:ring-slate-800 dark:shadow-2xl px-3 py-1 hover:ring-zinc-200/50 transition-all duration-300 dark:hover:ring-slate-900 cursor-default\";\n\n      const rotulo = document.createElement(\"span\");\n      rotulo.className = \"ml-1 text-sm text-slate-600 font-semibold dark:text-zinc-50 break-words\";\n      rotulo.textContent = texto;\n\n      const botao = document.createElement(\"button\");\n      botao.className =\n        \"ml-1 inline-flex items-center justify-center rounded bg-transparent text-violet-500 transition-all dark:text-violet-500 dark:hover:text-violet-500 hover:violet-600 ease-in-out hover:text-violet-600 px-2 py-1 text-xs active:scale-75\";\n      botao.setAttribute(\"title\", \"Copiar esse CNPJ\");\n      botao.innerHTML = `\n                <svg class=\"w-6 h-6\" aria-hidden=\"true\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"1.5\"\n                        d=\"M9 8v3a1 1 0 0 1-1 1H5m11 4h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-7a1 1 0 0 0-1 1v1m4 3v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7.13a1 1 0 0 1 .24-.65L7.7 8.35A1 1 0 0 1 8.46 8H13a1 1 0 0 1 1 1Z\" />\n                </svg>\n            `;\n\n      botao.addEventListener(\"click\", async (evento) => {\n        evento.preventDefault();\n        try {\n          await copiarTexto(texto);\n          exibirAviso(\n            this.elementos.areaAviso,\n            `CNPJ copiado: ${texto}`,\n            TipoAviso.InfoAlternativo,\n          );\n        } catch {\n          exibirAviso(this.elementos.areaAviso, \"Falha ao copiar\", TipoAviso.Erro);\n        }\n      });\n\n      item.append(rotulo, botao);\n      listaRecentes.appendChild(item);\n    });\n\n    listaRecentes.scrollTop = 0;\n    this.atualizarEstadoBotaoCopiarTodos();\n  }\n\n  /**\n   * @summary Copia todos os itens presentes no histórico para a área de transferência.\n   */\n  private async copiarTodos(): Promise<void> {\n    if (this.historico.itens.length === 0) {\n      exibirAviso(this.elementos.areaAviso, \"Nenhum CNPJ no histórico.\", TipoAviso.Erro);\n      return;\n    }\n\n    const { controleMascara } = this.elementos;\n    const listaParaCopiar = this.historico.itens\n      .map((puro) => (controleMascara?.checked ? aplicarMascara(puro) : puro))\n      .join(\",\");\n\n    try {\n      await copiarTexto(listaParaCopiar);\n      if (this.historico.itens.length === 1) {\n        exibirAviso(\n          this.elementos.areaAviso,\n          `Copiado 1 CNPJ: ${listaParaCopiar}`,\n          TipoAviso.InfoAlternativo,\n        );\n        return;\n      } else {\n        exibirAviso(\n          this.elementos.areaAviso,\n          `Copiados ${this.historico.itens.length} CNPJs separados por vírgula`,\n          TipoAviso.Info,\n        );\n      }\n    } catch {\n      exibirAviso(this.elementos.areaAviso, \"Falha ao copiar todos.\", TipoAviso.Erro);\n    }\n  }\n\n  /**\n   * @summary Atualiza o estado visual e funcional do botão de copiar todos os itens do histórico.\n   */\n  private atualizarEstadoBotaoCopiarTodos(): void {\n    const { botaoCopiarTodos, contadorHistorico } = this.elementos;\n\n    const total = this.historico.itens.length;\n    const totalExibido = Math.min(total, this.historico.limite);\n\n    if (botaoCopiarTodos) {\n      botaoCopiarTodos.disabled = total === 0;\n      botaoCopiarTodos.classList.toggle(\"cursor-nao-permitido\", total === 0);\n      botaoCopiarTodos.classList.toggle(\"opacity-60\", total === 0);\n    }\n\n    if (contadorHistorico) {\n      if (total > 0) {\n        contadorHistorico.textContent = totalExibido.toString();\n        contadorHistorico.className =\n          \"absolute mt-1.5 ml-2 inline-flex items-center justify-center rounded-lg p-2 bg-transparent text-slate-600 dark:text-zinc-50 text-xs font-bold w-6 h-6 border-2 border-zinc-600 dark:border-zinc-50 dark:border-zinc-50 cursor-default\";\n      } else {\n        contadorHistorico.textContent = \"\";\n        contadorHistorico.className = \"hidden\";\n      }\n    }\n  }\n\n  // Efeito de onda movido para utilitário em ui.ts\n}\n\n/**\n * @summary Obtém um elemento obrigatório por id, lançando erro caso não exista.\n * @param id Identificador do elemento HTML desejado.\n * @returns Referência ao elemento encontrado.\n */\n// obterElementoObrigatorio reaproveitado de ui.ts\n\n// Bootstrap do gerador e do banner de cookies\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  if (!document.getElementById(\"aviso-cookies\")) {\n    document.body.insertAdjacentHTML(\"beforeend\", htmlCookies);\n  }\n  inicializarAvisoDeCookies();\n\n  const elementos: ElementosInterface = {\n    campoResultado: obterElementoObrigatorio<HTMLInputElement>(\"campo-resultado\"),\n    botaoGerar: obterElementoObrigatorio<HTMLButtonElement>(\"botao-gerar\"),\n    botaoGerar10: obterElementoObrigatorio<HTMLButtonElement>(\"botao-gerar-10\"),\n    botaoCopiar: obterElementoObrigatorio<HTMLButtonElement>(\"botao-copiar\"),\n    areaAviso: obterElementoObrigatorio<HTMLDivElement>(\"toast\"),\n    textoTempoRestante: obterElementoObrigatorio<HTMLDivElement>(\"tempo-restante\"),\n    barraProgresso: obterElementoObrigatorio<HTMLElement>(\"barra\"),\n    controleMascara: document.getElementById(\"toggle-mascara\") as HTMLInputElement | null,\n    controleAlfanumerico: document.getElementById(\"toggle-alfanumerico\") as HTMLInputElement | null,\n    listaRecentes: document.getElementById(\"lista-recentes\") as HTMLUListElement | null,\n    botaoCopiarTodos: document.getElementById(\"botao-copiar-todos\") as HTMLButtonElement | null,\n    contadorHistorico: document.getElementById(\"contador-historico\") as HTMLSpanElement | null,\n  };\n\n  void new GeradorCnpj(elementos);\n});\n\nexport {};\n"]}