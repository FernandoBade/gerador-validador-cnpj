{"version":3,"file":"validador-cnpj.js","sourceRoot":"","sources":["../../../src/cnpj/validador-cnpj.ts"],"names":[],"mappings":"AAAA;;;;;;+BAM+B;AAE/B,OAAO,EAAE,WAAW,EAAE,qBAAqB,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AACnF,OAAO,EACH,oBAAoB,EACpB,qBAAqB,EACrB,uBAAuB,EACvB,aAAa,GAChB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AAC9E,OAAO,EACH,cAAc,EACd,yBAAyB,EACzB,cAAc,GACjB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,MAAM,2BAA2B,CAAC;AACnG,OAAO,EAAE,WAAW,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AACtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;AAyBhF;;GAEG;AACH,MAAM,aAAa;IASqB;IARnB,SAAS,GAAyB,EAAE,CAAC;IACrC,eAAe,GAAG,GAAG,CAAC;IACvC,YAAY,CAAqB;IACjC,iDAAiD;IAEjD;;OAEG;IACH,YAAoC,SAA6B;QAA7B,cAAS,GAAT,SAAS,CAAoB;QAC7D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,qBAAqB,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,iBAAiB;QACrB,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,eAAe,EAAE,aAAa,EAAE,UAAU,EAAE,GACtF,IAAI,CAAC,SAAS,CAAC;QAEnB,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YAC5C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YAC1C,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,CAAC,gCAAgC,EAAE,CAAC;YAC5C,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAc;QACpC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,UAAU,EAAE,GAC9E,IAAI,CAAC,SAAS,CAAC;QAEnB,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE;YAC/B,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC7C,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;YAC9C,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpD,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;YACrD,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAE7C,IAAI,KAAK,EAAE,CAAC;gBACR,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE,CAAC;YACR,UAAU,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;aAAM,CAAC;YACJ,UAAU,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,gBAAgB;QAC1B,IAAI,CAAC;YACD,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YACnD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACT,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,uCAAuC,EACvC,SAAS,CAAC,IAAI,CACjB,CAAC;gBACF,OAAO;YACX,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/C,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,oBAAoB,KAAK,EAAE,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC;QAClG,CAAC;QAAC,MAAM,CAAC;YACL,IAAI,CAAC,WAAW,CAAC,kDAAkD,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;QACzF,CAAC;IACL,CAAC;IAED;;OAEG;IACK,YAAY;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACrD,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,8BAA8B,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;YACtF,OAAO;QACX,CAAC;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5D,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YACnB,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,4CAA4C,EAC5C,SAAS,CAAC,IAAI,CACjB,CAAC;YACF,OAAO;QACX,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,SAAS,CAAC,MAAM;YAChB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,KAAK,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;;YAClF,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,KAAK,aAAa,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAC3F,CAAC;IAED;;OAEG;IACK,cAAc;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACrD,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,uCAAuC,EACvC,SAAS,CAAC,IAAI,CACjB,CAAC;YACF,OAAO;QACX,CAAC;QAED,MAAM,QAAQ,GAAG,KAAK;aACjB,KAAK,CAAC,MAAM,CAAC;aACb,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aAC5B,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEzC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxB,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,uCAAuC,EACvC,SAAS,CAAC,IAAI,CACjB,CAAC;YACF,OAAO;QACX,CAAC;QAED,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC;YACxB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,mCAAmC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3F,OAAO;QACX,CAAC;QAED,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gBACnB,OAAO,EAAE,CAAC;YACd,CAAC;iBAAM,CAAC;gBACJ,SAAS,EAAE,CAAC;YAChB,CAAC;YACD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,SAAS,KAAK,CAAC,IAAI,OAAO,GAAG,CAAC;YAC9B,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,aAAa,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;;YACvE,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAChF,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,SAA6B;QACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,CAAC;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAA2B,CAAC;QACzF,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAC5F,CAAC;IAED;;OAEG;IACK,mBAAmB;QACvB,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3D,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;QAE9B,MAAM,mBAAmB,GAAG,eAAe,CAAC,OAAO,CAAC;QAEpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC9C,QAAQ,CAAC,SAAS;gBACd,kNAAkN,CAAC;YAEvN,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACjD,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM;gBAC7B,CAAC,CAAC,sJAAsJ;gBACxJ,CAAC,CAAC,gJAAgJ,CAAC;YACvJ,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAE/E,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC7C,KAAK,CAAC,SAAS;gBACX,0FAA0F,CAAC;YAC/F,KAAK,CAAC,WAAW,GAAG,mBAAmB,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAEhF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACxD,iBAAiB,CAAC,SAAS,GAAG,gCAAgC,CAAC;YAC/D,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAE3C,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,CAAC,SAAS;gBACjB,oMAAoM,CAAC;YACzM,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;YACtD,WAAW,CAAC,SAAS,GAAG;;;;;aAKvB,CAAC;YAEF,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;gBACnD,MAAM,CAAC,cAAc,EAAE,CAAC;gBACxB,MAAM,eAAe,GAAG,mBAAmB,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpF,IAAI,CAAC;oBACD,MAAM,WAAW,CAAC,eAAe,CAAC,CAAC;oBACnC,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,iBAAiB,eAAe,EAAE,EAClC,SAAS,CAAC,eAAe,CAC5B,CAAC;gBACN,CAAC;gBAAC,MAAM,CAAC;oBACL,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,iBAAiB,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC7E,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;YAChD,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,cAAc,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7B,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAA2B,CAAC;QACzF,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAC5F,CAAC;IAEO,WAAW,CAAC,OAAe;QAC/B,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAC1C,MAAM,yBAAyB,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtE,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAElD,IAAI,yBAAyB,EAAE,CAAC;YAC5B,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YACrB,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC;QAE7F,MAAM,UAAU,GAAG,yBAAyB,CAAC,OAAO,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9E,MAAM,SAAS,GAAG,yBAAyB,CAAC,CAAC,GAAG,OAAO,EAAE,UAAU,CAAC,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC;QAE7F,MAAM,MAAM,GACR,UAAU,KAAK,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;YACxD,SAAS,KAAK,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QAE5D,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,qBAAqB;QACzB,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAEvD,MAAM,mBAAmB,GAAG,CAAC,KAAa,EAAU,EAAE,CAClD,yBAAyB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAErD,MAAM,gBAAgB,GAAG,GAAS,EAAE;YAChC,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;YAC7B,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAE9B,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;gBACpB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/B,CAAC;YAED,UAAU,CAAC,KAAK,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAChF,IAAI,CAAC,gCAAgC,EAAE,CAAC;QAC5C,CAAC,CAAC;QAEF,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACvD,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACvC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9D,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;YACzB,gBAAgB,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IACjE,CAAC;IAED;;OAEG;IACK,gCAAgC;QACpC,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACzD,MAAM,IAAI,GAAG,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QACpC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC;QACxC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC;QAC7D,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC;QACrE,iBAAiB,CAAC,KAAK,GAAG,SAAS;YAC/B,CAAC,CAAC,cAAc;YAChB,CAAC,CAAC,0CAA0C,CAAC;IACrD,CAAC;IAED;;OAEG;IACK,gCAAgC,CAAC,UAAkB;QACvD,MAAM,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,iBAAiB;YAAE,OAAO;QAC/B,MAAM,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;QACjC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC;QACxC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC;QAC7D,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC;QACrE,iBAAiB,CAAC,KAAK,GAAG,SAAS;YAC/B,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,gDAAgD,CAAC;IAC3D,CAAC;IAED,sDAAsD;IAC9C,UAAU,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAEpD,mFAAmF;IAEnF;;OAEG;IACK,0BAA0B;QAC9B,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACvD,MAAM,MAAM,GAAG,GAAG,CAAC;QAEnB,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,oBAA6B,EAAU,EAAE;YAC3E,wEAAwE;YACxE,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACzC,MAAM,UAAU,GAAa,EAAE,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,GAAG,EAAU,CAAC;YAEjC,KAAK,MAAM,KAAK,IAAI,YAAY,EAAE,CAAC;gBAC/B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBACvB,IAAI,CAAC,CAAC;oBAAE,SAAS;gBAEjB,MAAM,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACrF,MAAM,KAAK,GAAG,SAAS,CAAC;gBACxB,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC9B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAClB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,UAAU,CAAC,MAAM,IAAI,MAAM;wBAAE,MAAM;gBAC3C,CAAC;YACL,CAAC;YAED,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,oBAAoB,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC;gBACrD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;oBAAE,KAAK,IAAI,IAAI,CAAC;YACxC,CAAC;iBAAM,CAAC;gBACJ,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YACzC,CAAC;YACD,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;QAEF,MAAM,UAAU,GAAG,CAAC,SAAiB,EAAQ,EAAE;YAC3C,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK;gBAAE,OAAO;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;YAE7B,MAAM,mBAAmB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnF,MAAM,IAAI,GAAG,aAAa,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;YAC3D,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC/C,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;YAC5B,CAAC;iBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,KAAK,EAAE,EAAE,CAAC;gBACtD,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;YAC1B,CAAC;YAED,MAAM,KAAK,GAAG,IAAI;iBACb,KAAK,CAAC,GAAG,CAAC;iBACV,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBACpB,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC5B,IAAI,KAAK,IAAI,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC/C,WAAW,CACP,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,aAAa,MAAM,6CAA6C,EAChE,SAAS,CAAC,IAAI,CACjB,CAAC;YACN,CAAC;YAED,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC;QAEF,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACtC,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;YAC3B,MAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,YAAY;gBAAE,UAAU,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACvC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9D,UAAU,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACnF,CAAC;IAED;;OAEG;IACK,kBAAkB,CAAC,SAAiB;QACxC,MAAM,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,OAAO,MAAM,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,OAAiB,EAAE,KAAe;QACrD,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CACvB,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,CAAC,SAAS,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAChF,CAAC,CACJ,CAAC;QACF,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QACxB,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,QAAgB,EAAE,IAAe;QACjD,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACrC,MAAM,WAAW,GACb,2IAA2I,CAAC;QAEhJ,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;QACjC,SAAS,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,eAAe,IAAI,WAAW,CAAC,gBAAgB,IAAI,WAAW,CAAC,kBAAkB,EAAE,CAAC;QAEnL,qBAAqB,CAAC,GAAG,EAAE;YACvB,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,oBAAoB,CAAC,CAAC;YACpD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACvC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,qBAAqB,CAAC,CAAC;YACrD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC;QACrD,CAAC,EAAE,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG;IACK,4BAA4B;QAChC,MAAM,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAEvD,UAAU,CAAC,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAE3F,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YAC5C,UAAU,CAAC,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAC/F,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,wBAAwB,CAAC,QAAoB,EAAE,SAAS,GAAG,GAAG;QAClE,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAA0B,CAAC;QACzF,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAA0B,CAAC;QAC7F,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAA4B,CAAC;QACvF,IAAI,CAAC,aAAa,IAAI,CAAC,eAAe,EAAE,CAAC;YACrC,QAAQ,EAAE,CAAC;YACX,OAAO;QACX,CAAC;QAED,MAAM,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC;QAC1C,MAAM,MAAM,GAAG,eAAe,CAAC,YAAY,CAAC;QAC5C,MAAM,KAAK,GAAG,UAAU,SAAS,gBAAgB,CAAC;QAElD,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;QAC3C,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;QAC7C,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;QACvC,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;QACzC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACxC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1C,QAAQ,EAAE,CAAC;QAEX,qBAAqB,CAAC,GAAG,EAAE;YACvB,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACpC,MAAM,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC;YAExC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;YAC3C,KAAK,aAAa,CAAC,YAAY,CAAC;YAChC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC;YAEzC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;YAC7C,KAAK,eAAe,CAAC,YAAY,CAAC;YAClC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC;YAE3C,MAAM,YAAY,GAAG,GAAG,EAAE;gBACtB,8BAA8B;gBAC9B,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;gBACpC,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;gBACtC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAClC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAEpC,IAAI,WAAW,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;oBACtC,qEAAqE;oBACrE,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;oBAChC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;gBACtC,CAAC;qBAAM,CAAC;oBACJ,+DAA+D;oBAC/D,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC;oBACzC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC;gBAC/C,CAAC;YACL,CAAC,CAAC;YAEF,aAAa,CAAC,gBAAgB,CAAC,eAAe,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAED,SAAS,wBAAwB,CAAwB,EAAU;IAC/D,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACZ,MAAM,IAAI,KAAK,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAC;IAC/D,CAAC;IACD,OAAO,QAAa,CAAC;AACzB,CAAC;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC/C,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,CAAC;QAC5C,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAC/D,CAAC;IACD,yBAAyB,EAAE,CAAC;IAE5B,MAAM,SAAS,GAAuB;QAClC,UAAU,EAAE,wBAAwB,CAAmB,aAAa,CAAC;QACrE,UAAU,EAAE,wBAAwB,CAAsB,aAAa,CAAC;QACxE,eAAe,EAAE,wBAAwB,CAAmB,0BAA0B,CAAC;QACvF,aAAa,EAAE,wBAAwB,CAAmB,cAAc,CAAC;QACzE,iBAAiB,EAAE,wBAAwB,CAAoB,eAAe,CAAC;QAC/E,iBAAiB,EAAE,wBAAwB,CAAoB,qBAAqB,CAAC;QACrF,cAAc,EAAE,wBAAwB,CAAmB,2BAA2B,CAAC;QACvF,SAAS,EAAE,wBAAwB,CAAiB,OAAO,CAAC;QAC5D,UAAU,EAAE,wBAAwB,CAAoB,aAAa,CAAC;KACzE,CAAC;IAEF,KAAK,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC","sourcesContent":["/* ============================\r\n   Validador de CNPJ Alfanumérico 2026\r\n   - Validação individual e em massa\r\n   - Suporte a máscara visual e colagem\r\n   - Cálculo de dígitos verificadores (módulo 11)\r\n   - Avisos e utilidades de UI reutilizáveis\r\n============================ */\r\n\r\nimport { ClasseAviso, IntervaloTemporizador, TipoAviso } from \"../gerais/enums.js\";\r\nimport {\r\n    CLASSES_AVISO_OCULTO,\r\n    CLASSES_AVISO_VISIVEL,\r\n    MAPA_CLASSES_TIPO_AVISO,\r\n    PESOS_DIGITOS,\r\n} from \"../gerais/constantes.js\";\r\nimport { htmlCookies, inicializarAvisoDeCookies } from \"../gerais/cookies.js\";\r\nimport {\r\n    aplicarMascara,\r\n    aplicarMascaraProgressiva,\r\n    normalizarPuro,\r\n} from \"../cnpj/formatacao-cnpj.js\";\r\nimport { calcularDigitoVerificador, converterCaractereParaValor } from \"../cnpj/algoritmo-cnpj.js\";\r\nimport { copiarTexto, inicializarEfeitoOnda } from \"../interface/interface.js\";\r\nimport { exibirAviso } from \"../gerais/mensageria.js\";\r\nimport { atualizarContadorHistorico } from \"../interface/contador-historico.js\";\r\n\r\n/**\r\n * @summary Elementos de interface utilizados pelo validador.\r\n */\r\ninterface ElementosValidador {\r\n    campoUnico: HTMLInputElement;\r\n    campoMassa: HTMLTextAreaElement;\r\n    controleMascara: HTMLInputElement;\r\n    controleMassa: HTMLInputElement;\r\n    botaoValidarUnico: HTMLButtonElement;\r\n    botaoValidarMassa: HTMLButtonElement;\r\n    listaHistorico: HTMLUListElement;\r\n    areaAviso: HTMLDivElement;\r\n    botaoColar: HTMLButtonElement;\r\n}\r\n\r\n/**\r\n * @summary Estrutura do resultado de uma validação de CNPJ.\r\n */\r\ninterface ResultadoValidacao {\r\n    puro: string;\r\n    valido: boolean;\r\n}\r\n\r\n/**\r\n * @summary Classe responsável pela validação de CNPJs (único e em massa) com UI.\r\n */\r\nclass ValidadorCnpj {\r\n    private readonly historico: ResultadoValidacao[] = [];\r\n    private readonly limiteHistorico = 100;\r\n    timeoutAviso: number | undefined;\r\n    // Avisos agora controlados pelo utilitário de UI\r\n\r\n    /**\r\n     * @summary Inicializa o validador e configura a interface.\r\n     */\r\n    public constructor(private readonly elementos: ElementosValidador) {\r\n        this.configurarEventos();\r\n        this.configurarPlaceholderMascara();\r\n        this.configurarEntradaCnpj();\r\n        this.configurarEntradaCNPJMassa();\r\n        this.alternarModoMassa(false);\r\n        this.atualizarEstadoBotaoValidarUnico();\r\n        inicializarEfeitoOnda();\r\n    }\r\n\r\n    /**\r\n     * @summary Registra os manipuladores de eventos da interface.\r\n     */\r\n    private configurarEventos(): void {\r\n        const { botaoValidarUnico, botaoValidarMassa, controleMascara, controleMassa, botaoColar } =\r\n            this.elementos;\r\n\r\n        botaoValidarUnico.addEventListener(\"click\", () => {\r\n            this.validarUnico();\r\n        });\r\n\r\n        botaoValidarMassa.addEventListener(\"click\", () => {\r\n            this.validarEmMassa();\r\n        });\r\n\r\n        controleMascara.addEventListener(\"change\", () => {\r\n            this.renderizarHistorico();\r\n        });\r\n\r\n        controleMassa.addEventListener(\"change\", () => {\r\n            this.alternarModoMassa(controleMassa.checked);\r\n            if (!controleMassa.checked) {\r\n                this.atualizarEstadoBotaoValidarUnico();\r\n            }\r\n        });\r\n\r\n        botaoColar.addEventListener(\"click\", async () => {\r\n            await this.colarDoClipboard();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @summary Alterna entre validação única e em massa com animação suave.\r\n     */\r\n    private alternarModoMassa(ativo: boolean): void {\r\n        const { campoUnico, campoMassa, botaoValidarUnico, botaoValidarMassa, botaoColar } =\r\n            this.elementos;\r\n\r\n        this.animarAlturaSincronizada(() => {\r\n            campoUnico.classList.toggle(\"hidden\", ativo);\r\n            campoMassa.classList.toggle(\"hidden\", !ativo);\r\n            botaoValidarUnico.classList.toggle(\"hidden\", ativo);\r\n            botaoValidarMassa.classList.toggle(\"hidden\", !ativo);\r\n            botaoColar.classList.toggle(\"hidden\", ativo);\r\n\r\n            if (ativo) {\r\n                campoMassa.value = \"\";\r\n            }\r\n        });\r\n\r\n        if (ativo) {\r\n            campoMassa.focus();\r\n        } else {\r\n            campoUnico.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @summary Cola conteúdo do clipboard no campo único e notifica o usuário.\r\n     */\r\n    private async colarDoClipboard(): Promise<void> {\r\n        try {\r\n            const texto = await navigator.clipboard.readText();\r\n            if (!texto) {\r\n                exibirAviso(\r\n                    this.elementos.areaAviso,\r\n                    \"Nenhum conteúdo disponível para colar\",\r\n                    TipoAviso.Info,\r\n                );\r\n                return;\r\n            }\r\n            this.elementos.campoUnico.value = texto.trim();\r\n            exibirAviso(this.elementos.areaAviso, `Conteúdo colado: ${texto}`, TipoAviso.InfoAlternativo);\r\n        } catch {\r\n            this.exibirAviso(\"Não foi possível acessar a área de transferência\", TipoAviso.Erro);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @summary Valida o conteúdo do campo único e atualiza o histórico.\r\n     */\r\n    private validarUnico(): void {\r\n        const valor = this.elementos.campoUnico.value.trim();\r\n        if (!valor) {\r\n            exibirAviso(this.elementos.areaAviso, \"Informe um CNPJ para validar\", TipoAviso.Erro);\r\n            return;\r\n        }\r\n\r\n        const puro = valor.replace(/[^0-9A-Z]/gi, \"\").toUpperCase();\r\n        if (puro.length < 14) {\r\n            exibirAviso(\r\n                this.elementos.areaAviso,\r\n                \"Insira os 14 caracteres antes da validação\",\r\n                TipoAviso.Info,\r\n            );\r\n            return;\r\n        }\r\n\r\n        const resultado = this.validarCnpj(valor);\r\n        this.adicionarAoHistorico(resultado);\r\n        this.renderizarHistorico();\r\n\r\n        if (resultado.valido)\r\n            exibirAviso(this.elementos.areaAviso, `CNPJ ${valor} é válido`, TipoAviso.Sucesso);\r\n        else exibirAviso(this.elementos.areaAviso, `CNPJ ${valor} é inválido`, TipoAviso.Erro);\r\n    }\r\n\r\n    /**\r\n     * @summary Valida uma lista de CNPJs separados por vírgula/; e atualiza o histórico.\r\n     */\r\n    private validarEmMassa(): void {\r\n        const valor = this.elementos.campoMassa.value.trim();\r\n        if (!valor) {\r\n            exibirAviso(\r\n                this.elementos.areaAviso,\r\n                \"Informe ao menos um CNPJ para validar\",\r\n                TipoAviso.Info,\r\n            );\r\n            return;\r\n        }\r\n\r\n        const entradas = valor\r\n            .split(/[;,]/)\r\n            .map((parte) => parte.trim())\r\n            .filter((parte) => parte.length > 0);\r\n\r\n        if (entradas.length === 0) {\r\n            exibirAviso(\r\n                this.elementos.areaAviso,\r\n                \"Informe ao menos um CNPJ para validar\",\r\n                TipoAviso.Info,\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (entradas.length > 100) {\r\n            exibirAviso(this.elementos.areaAviso, \"Limite de 100 CNPJs por validação\", TipoAviso.Erro);\r\n            return;\r\n        }\r\n\r\n        let validos = 0;\r\n        let invalidos = 0;\r\n\r\n        entradas.forEach((entrada) => {\r\n            const resultado = this.validarCnpj(entrada);\r\n            if (resultado.valido) {\r\n                validos++;\r\n            } else {\r\n                invalidos++;\r\n            }\r\n            this.adicionarAoHistorico(resultado);\r\n        });\r\n\r\n        this.renderizarHistorico();\r\n\r\n        if (invalidos === 0 && validos > 0)\r\n            exibirAviso(this.elementos.areaAviso, \"CNPJ válido\", TipoAviso.Sucesso);\r\n        else exibirAviso(this.elementos.areaAviso, \"CNPJ inválido\", TipoAviso.Erro);\r\n    }\r\n\r\n    /**\r\n     * @summary Adiciona o resultado ao histórico respeitando o limite.\r\n     */\r\n    private adicionarAoHistorico(resultado: ResultadoValidacao): void {\r\n        this.historico.unshift(resultado);\r\n        if (this.historico.length > this.limiteHistorico) {\r\n            this.historico.length = this.limiteHistorico;\r\n        }\r\n\r\n        const contador = document.getElementById(\"contador-historico\") as HTMLSpanElement | null;\r\n        atualizarContadorHistorico(contador, this.historico.length, this.limiteHistorico, true);\r\n    }\r\n\r\n    /**\r\n     * @summary Renderiza a lista de validações realizadas, com opção de copiar.\r\n     */\r\n    private renderizarHistorico(): void {\r\n        const { listaHistorico, controleMascara } = this.elementos;\r\n        listaHistorico.innerHTML = \"\";\r\n\r\n        const aplicarMascaraAtiva = controleMascara.checked;\r\n\r\n        this.historico.forEach((item) => {\r\n            const elemento = document.createElement(\"li\");\r\n            elemento.className =\r\n                \"flex items-center justify-between gap-3 rounded-md ring-2 ring-slate-100 dark:ring-slate-800 dark:shadow-2xl px-3 py-1 hover:ring-slate-300 transition-all duration-300 dark:hover:ring-slate-900 cursor-default\";\r\n\r\n            const indicador = document.createElement(\"span\");\r\n            indicador.className = item.valido\r\n                ? \"inline-block w-2 h-2 rounded-full border bg-teal-500 border-emerald-500 ring-2 ring-teal-500/40 shadow-sm shadow-current transition-all duration-300\"\r\n                : \"inline-block w-2 h-2 rounded-full border bg-red-400 border-red-500 ring-2 ring-red-400/40 shadow-sm shadow-current transition-all duration-300\";\r\n            indicador.setAttribute(\"title\", item.valido ? \"CNPJ válido\" : \"CNPJ inválido\");\r\n\r\n            const texto = document.createElement(\"span\");\r\n            texto.className =\r\n                \"text-sm font-semibold text-slate-600 dark:text-zinc-50 break-words flex-1 cursor-default\";\r\n            texto.textContent = aplicarMascaraAtiva ? aplicarMascara(item.puro) : item.puro;\r\n\r\n            const containerEsquerdo = document.createElement(\"div\");\r\n            containerEsquerdo.className = \"flex items-center gap-3 flex-1\";\r\n            containerEsquerdo.append(indicador, texto);\r\n\r\n            const botaoCopiar = document.createElement(\"button\");\r\n            botaoCopiar.className =\r\n                \"ml-1 inline-flex items-center justify-center rounded text-violet-500 transition-all dark:text-violet-500 dark:hover:text-violet-600 ease-in-out hover:text-violet-600 hover:scale-110 py-1 text-xs\";\r\n            botaoCopiar.setAttribute(\"title\", \"Copiar esse CNPJ\");\r\n            botaoCopiar.innerHTML = `\r\n                <svg class=\"w-6 h-6\" aria-hidden=\"true\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"1.5\"\r\n                        d=\"M9 8v3a1 1 0 0 1-1 1H5m11 4h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-7a1 1 0 0 0-1 1v1m4 3v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7.13a1 1 0 0 1 .24-.65L7.7 8.35A1 1 0 0 1 8.46 8H13a1 1 0 0 1 1 1Z\" />\r\n                </svg>\r\n            `;\r\n\r\n            botaoCopiar.addEventListener(\"click\", async (evento) => {\r\n                evento.preventDefault();\r\n                const textoParaCopiar = aplicarMascaraAtiva ? aplicarMascara(item.puro) : item.puro;\r\n                try {\r\n                    await copiarTexto(textoParaCopiar);\r\n                    exibirAviso(\r\n                        this.elementos.areaAviso,\r\n                        `CNPJ copiado: ${textoParaCopiar}`,\r\n                        TipoAviso.InfoAlternativo,\r\n                    );\r\n                } catch {\r\n                    exibirAviso(this.elementos.areaAviso, \"Falha ao copiar\", TipoAviso.Erro);\r\n                }\r\n            });\r\n\r\n            elemento.append(containerEsquerdo, botaoCopiar);\r\n            listaHistorico.appendChild(elemento);\r\n        });\r\n\r\n        listaHistorico.scrollTop = 0;\r\n        const contador = document.getElementById(\"contador-historico\") as HTMLSpanElement | null;\r\n        atualizarContadorHistorico(contador, this.historico.length, this.limiteHistorico, true);\r\n    }\r\n\r\n    private validarCnpj(entrada: string): ResultadoValidacao {\r\n        const normalizado = entrada.toUpperCase();\r\n        const possuiCaracteresInvalidos = /[^0-9A-Z.\\-/\\s]/.test(normalizado);\r\n        const puro = normalizado.replace(/[.\\-/\\s]/g, \"\");\r\n\r\n        if (possuiCaracteresInvalidos) {\r\n            return { puro, valido: false };\r\n        }\r\n\r\n        if (puro.length !== 14) {\r\n            return { puro, valido: false };\r\n        }\r\n\r\n        if (!/^[0-9A-Z]{12}[0-9]{2}$/.test(puro)) {\r\n            return { puro, valido: false };\r\n        }\r\n\r\n        if (/^([0-9A-Z])\\1{13}$/.test(puro)) {\r\n            return { puro, valido: false };\r\n        }\r\n\r\n        const corpo = puro.slice(0, 12);\r\n        const dvInformado = puro.slice(12);\r\n        const valores = Array.from(corpo).map((caractere) => converterCaractereParaValor(caractere));\r\n\r\n        const primeiroDV = calcularDigitoVerificador(valores, PESOS_DIGITOS.primeiro);\r\n        const segundoDV = calcularDigitoVerificador([...valores, primeiroDV], PESOS_DIGITOS.segundo);\r\n\r\n        const valido =\r\n            primeiroDV === Number.parseInt(dvInformado[0] ?? \"\", 10) &&\r\n            segundoDV === Number.parseInt(dvInformado[1] ?? \"\", 10);\r\n\r\n        return { puro, valido };\r\n    }\r\n\r\n    /**\r\n     * @summary Configura o comportamento do campo único (normalização e máscara).\r\n     */\r\n    private configurarEntradaCnpj(): void {\r\n        const { campoUnico, controleMascara } = this.elementos;\r\n\r\n        const aplicarMascaraLocal = (valor: string): string =>\r\n            aplicarMascaraProgressiva(normalizarPuro(valor));\r\n\r\n        const atualizarEntrada = (): void => {\r\n            let bruto = campoUnico.value;\r\n            bruto = normalizarPuro(bruto);\r\n\r\n            if (bruto.length > 14) {\r\n                bruto = bruto.slice(0, 14);\r\n            }\r\n\r\n            campoUnico.value = controleMascara.checked ? aplicarMascaraLocal(bruto) : bruto;\r\n            this.atualizarEstadoBotaoValidarUnico();\r\n        };\r\n\r\n        campoUnico.addEventListener(\"input\", atualizarEntrada);\r\n        campoUnico.addEventListener(\"paste\", (e) => {\r\n            e.preventDefault();\r\n            const texto = (e.clipboardData?.getData(\"text\") ?? \"\").trim();\r\n            campoUnico.value = texto;\r\n            atualizarEntrada();\r\n        });\r\n\r\n        controleMascara.addEventListener(\"change\", atualizarEntrada);\r\n    }\r\n\r\n    /**\r\n     * @summary Habilita/desabilita o botão \"Validar CNPJ\" conforme o total de 14 caracteres.\r\n     */\r\n    private atualizarEstadoBotaoValidarUnico(): void {\r\n        const { campoUnico, botaoValidarUnico } = this.elementos;\r\n        const puro = normalizarPuro(campoUnico.value);\r\n        const habilitar = puro.length >= 14;\r\n        botaoValidarUnico.disabled = !habilitar;\r\n        botaoValidarUnico.classList.toggle(\"opacity-60\", !habilitar);\r\n        botaoValidarUnico.classList.toggle(\"cursor-not-allowed\", !habilitar);\r\n        botaoValidarUnico.title = habilitar\r\n            ? \"Validar CNPJ\"\r\n            : \"Informe ao menos 14 digitos para validar\";\r\n    }\r\n\r\n    /**\r\n     * @summary Habilita/desabilita o botão de validação em massa conforme a lista.\r\n     */\r\n    private atualizarEstadoBotaoValidarMassa(totalItens: number): void {\r\n        const { botaoValidarMassa } = this.elementos;\r\n        if (!botaoValidarMassa) return;\r\n        const habilitar = totalItens > 0;\r\n        botaoValidarMassa.disabled = !habilitar;\r\n        botaoValidarMassa.classList.toggle(\"opacity-60\", !habilitar);\r\n        botaoValidarMassa.classList.toggle(\"cursor-not-allowed\", !habilitar);\r\n        botaoValidarMassa.title = habilitar\r\n            ? \"Validar CNPJs em Massa\"\r\n            : \"adicione ao menos 1 CNPJ para validar em massa\";\r\n    }\r\n\r\n    // evita loops de reentrada quando reatribuímos .value\r\n    private formatando = { unico: false, massa: false };\r\n\r\n    // normalização e formatação reutilizadas via utilitários em src/formatacao-cnpj.ts\r\n\r\n    /**\r\n     * @summary Configura o campo de validação em massa, formatando e limitando itens.\r\n     */\r\n    private configurarEntradaCNPJMassa(): void {\r\n        const { campoMassa, controleMascara } = this.elementos;\r\n        const LIMITE = 100;\r\n\r\n        const formatarLista = (texto: string, manterSeparadorFinal: boolean): string => {\r\n            // normaliza os separadores para vírgula, mas mantemos se há um no final\r\n            const partesBrutas = texto.split(/[;,]/);\r\n            const formatadas: string[] = [];\r\n            const vistos = new Set<string>();\r\n\r\n            for (const parte of partesBrutas) {\r\n                const p = parte.trim();\r\n                if (!p) continue;\r\n\r\n                const puroParte = normalizarPuro(p);\r\n                const f = controleMascara.checked ? aplicarMascaraProgressiva(puroParte) : puroParte;\r\n                const chave = puroParte;\r\n                if (chave && !vistos.has(chave)) {\r\n                    vistos.add(chave);\r\n                    formatadas.push(f);\r\n                    if (formatadas.length >= LIMITE) break;\r\n                }\r\n            }\r\n\r\n            let saida = formatadas.join(\", \");\r\n            if (manterSeparadorFinal && formatadas.length < LIMITE) {\r\n                if (saida.length > 0) saida += \", \";\r\n            } else {\r\n                saida = saida.replace(/[,\\s]+$/, \"\");\r\n            }\r\n            return saida;\r\n        };\r\n\r\n        const reformatar = (textoOrig: string): void => {\r\n            if (this.formatando.massa) return;\r\n            this.formatando.massa = true;\r\n\r\n            const temDelimitadorFinal = /[;,]\\s*$/.test(textoOrig) || /\\n\\s*$/.test(textoOrig);\r\n            const novo = formatarLista(textoOrig, temDelimitadorFinal);\r\n            if (novo.length > 0 && novo !== campoMassa.value) {\r\n                campoMassa.value = novo;\r\n            } else if (novo.length === 0 && campoMassa.value !== \"\") {\r\n                campoMassa.value = \"\";\r\n            }\r\n\r\n            const total = novo\r\n                .split(\",\")\r\n                .map((s) => s.trim())\r\n                .filter(Boolean).length;\r\n            if (total >= LIMITE && /[;,]|\\n/.test(textoOrig)) {\r\n                exibirAviso(\r\n                    this.elementos.areaAviso,\r\n                    `Limite de ${LIMITE} CNPJs atingido. Os extras foram ignorados.`,\r\n                    TipoAviso.Info,\r\n                );\r\n            }\r\n\r\n            this.atualizarEstadoBotaoValidarMassa(total);\r\n            this.formatando.massa = false;\r\n        };\r\n\r\n        campoMassa.addEventListener(\"input\", () => {\r\n            const v = campoMassa.value;\r\n            const terminouItem = /[;,]|\\n/.test(v.slice(-1));\r\n            if (terminouItem) reformatar(v);\r\n        });\r\n\r\n        campoMassa.addEventListener(\"paste\", (e) => {\r\n            e.preventDefault();\r\n            const texto = (e.clipboardData?.getData(\"text\") ?? \"\").trim();\r\n            reformatar(texto);\r\n        });\r\n\r\n        controleMascara.addEventListener(\"change\", () => reformatar(campoMassa.value));\r\n    }\r\n\r\n    /**\r\n     * @summary Converte um caractere numérico em valor (usado como fallback legado).\r\n     */\r\n    private converterCaractere(caractere: string): number {\r\n        const codigo = caractere.charCodeAt(0);\r\n        return codigo - 48;\r\n    }\r\n\r\n    /**\r\n     * @summary Calcula DV com módulo 11 (fallback legado usado internamente).\r\n     */\r\n    private calcularDigito(valores: number[], pesos: number[]): number {\r\n        const soma = valores.reduce(\r\n            (acumulado, valorAtual, indice) => acumulado + valorAtual * (pesos[indice] ?? 0),\r\n            0,\r\n        );\r\n        const resto = soma % 11;\r\n        return resto < 2 ? 0 : 11 - resto;\r\n    }\r\n\r\n    /**\r\n     * @summary Exibe aviso utilizando as classes locais (compatibilidade legada).\r\n     */\r\n    private exibirAviso(mensagem: string, tipo: TipoAviso): void {\r\n        const { areaAviso } = this.elementos;\r\n        const classesBase =\r\n            \"fixed bottom-4 right-4 min-w-[240px] max-w-[calc(100%-2rem)] rounded-lg px-4 py-3 text-sm shadow-2xl transition-all duration-200 ease-out\";\r\n\r\n        areaAviso.textContent = mensagem;\r\n        areaAviso.className = `${classesBase} ${MAPA_CLASSES_TIPO_AVISO[tipo].join(\" \")} ${ClasseAviso.OpacidadeOculta} ${ClasseAviso.TranslacaoOculta} ${ClasseAviso.PonteiroDesativado}`;\r\n\r\n        requestAnimationFrame(() => {\r\n            areaAviso.classList.remove(...CLASSES_AVISO_OCULTO);\r\n            areaAviso.classList.add(...CLASSES_AVISO_VISIVEL);\r\n        });\r\n\r\n        if (this.timeoutAviso !== undefined) {\r\n            window.clearTimeout(this.timeoutAviso);\r\n        }\r\n\r\n        this.timeoutAviso = window.setTimeout(() => {\r\n            areaAviso.classList.remove(...CLASSES_AVISO_VISIVEL);\r\n            areaAviso.classList.add(...CLASSES_AVISO_OCULTO);\r\n        }, IntervaloTemporizador.Aviso);\r\n    }\r\n\r\n    /**\r\n     * @summary Define o placeholder do campo único conforme o estado da máscara.\r\n     */\r\n    private configurarPlaceholderMascara(): void {\r\n        const { controleMascara, campoUnico } = this.elementos;\r\n\r\n        campoUnico.placeholder = controleMascara.checked ? \"00.ABC.000/ABCD-00\" : \"00ABC000ABCD00\";\r\n\r\n        controleMascara.addEventListener(\"change\", () => {\r\n            campoUnico.placeholder = controleMascara.checked ? \"00.ABC.000/ABCD-00\" : \"00ABC000ABCD00\";\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @summary Anima a altura dos cards ao alternar entre os modos de validação.\r\n     */\r\n    private animarAlturaSincronizada(mutarDOM: () => void, duracaoMs = 400): void {\r\n        const cardValidacao = document.getElementById(\"card-validacao\") as HTMLDivElement | null;\r\n        const painelValidacao = document.getElementById(\"painel-validacao\") as HTMLDivElement | null;\r\n        const toggleMassa = document.getElementById(\"toggle-massa\") as HTMLInputElement | null;\r\n        if (!cardValidacao || !painelValidacao) {\r\n            mutarDOM();\r\n            return;\r\n        }\r\n\r\n        const startA = cardValidacao.offsetHeight;\r\n        const startB = painelValidacao.offsetHeight;\r\n        const trans = `height ${duracaoMs}ms ease-in-out`;\r\n\r\n        cardValidacao.style.height = `${startA}px`;\r\n        painelValidacao.style.height = `${startB}px`;\r\n        cardValidacao.style.transition = trans;\r\n        painelValidacao.style.transition = trans;\r\n        cardValidacao.style.overflow = \"hidden\";\r\n        painelValidacao.style.overflow = \"hidden\";\r\n\r\n        mutarDOM();\r\n\r\n        requestAnimationFrame(() => {\r\n            cardValidacao.style.height = \"auto\";\r\n            const endA = cardValidacao.offsetHeight;\r\n\r\n            cardValidacao.style.height = `${startA}px`;\r\n            void cardValidacao.offsetHeight;\r\n            cardValidacao.style.height = `${endA}px`;\r\n\r\n            painelValidacao.style.height = `${startB}px`;\r\n            void painelValidacao.offsetHeight;\r\n            painelValidacao.style.height = `${endA}px`;\r\n\r\n            const limparDepois = () => {\r\n                // limpa transições após o fim\r\n                cardValidacao.style.transition = \"\";\r\n                painelValidacao.style.transition = \"\";\r\n                cardValidacao.style.overflow = \"\";\r\n                painelValidacao.style.overflow = \"\";\r\n\r\n                if (toggleMassa && !toggleMassa.checked) {\r\n                    // 🔹 quando desativa o modo massa, volta pro tamanho dinâmico (auto)\r\n                    cardValidacao.style.height = \"\";\r\n                    painelValidacao.style.height = \"\";\r\n                } else {\r\n                    // 🔹 mantém o tamanho fixo enquanto o modo massa estiver ativo\r\n                    cardValidacao.style.height = `${endA}px`;\r\n                    painelValidacao.style.height = `${endA}px`;\r\n                }\r\n            };\r\n\r\n            cardValidacao.addEventListener(\"transitionend\", limparDepois, { once: true });\r\n        });\r\n    }\r\n}\r\n\r\nfunction obterElementoObrigatorio<T extends HTMLElement>(id: string): T {\r\n    const elemento = document.getElementById(id);\r\n    if (!elemento) {\r\n        throw new Error(`Elemento com id \"${id}\" não encontrado.`);\r\n    }\r\n    return elemento as T;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (!document.getElementById(\"aviso-cookies\")) {\r\n        document.body.insertAdjacentHTML(\"beforeend\", htmlCookies);\r\n    }\r\n    inicializarAvisoDeCookies();\r\n\r\n    const elementos: ElementosValidador = {\r\n        campoUnico: obterElementoObrigatorio<HTMLInputElement>(\"campo-unico\"),\r\n        campoMassa: obterElementoObrigatorio<HTMLTextAreaElement>(\"campo-massa\"),\r\n        controleMascara: obterElementoObrigatorio<HTMLInputElement>(\"toggle-mascara-validator\"),\r\n        controleMassa: obterElementoObrigatorio<HTMLInputElement>(\"toggle-massa\"),\r\n        botaoValidarUnico: obterElementoObrigatorio<HTMLButtonElement>(\"botao-validar\"),\r\n        botaoValidarMassa: obterElementoObrigatorio<HTMLButtonElement>(\"botao-validar-massa\"),\r\n        listaHistorico: obterElementoObrigatorio<HTMLUListElement>(\"lista-historico-validacao\"),\r\n        areaAviso: obterElementoObrigatorio<HTMLDivElement>(\"toast\"),\r\n        botaoColar: obterElementoObrigatorio<HTMLButtonElement>(\"botao-colar\"),\r\n    };\r\n\r\n    void new ValidadorCnpj(elementos);\r\n});\r\n\r\nexport { };\r\n"]}