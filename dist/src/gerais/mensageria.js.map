{"version":3,"file":"mensageria.js","sourceRoot":"","sources":["../../../src/gerais/mensageria.ts"],"names":[],"mappings":"AAAA;;;;+BAI+B;AAE/B,OAAO,EACL,oBAAoB,EACpB,qBAAqB,EACrB,uBAAuB,GACxB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,WAAW,EAAE,qBAAqB,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAE3E,MAAM,eAAe,GAAG,IAAI,OAAO,EAAuB,CAAC;AAE3D;;;;;GAKG;AACH,MAAM,UAAU,WAAW,CACzB,SAAyB,EACzB,QAAgB,EAChB,OAAkB,SAAS,CAAC,OAAO;IAEnC,MAAM,WAAW,GACf,gJAAgJ,CAAC;IAEnJ,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;IACjC,SAAS,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,eAAe,IAAI,WAAW,CAAC,gBAAgB,IAAI,WAAW,CAAC,kBAAkB,EAAE,CAAC;IAEnL,qBAAqB,CAAC,GAAG,EAAE;QACzB,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,oBAAoB,CAAC,CAAC;QACpD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,MAAM,KAAK,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC7C,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;QACrC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,qBAAqB,CAAC,CAAC;QACrD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC;QACjD,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC,EAAE,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAEhC,eAAe,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC1C,CAAC;AAED,OAAO,EAAE,SAAS,EAAE,CAAC","sourcesContent":["/* ============================\n   Mensageria (Toasts/Avisos)\n   - Exibe avisos temporários com estilos por tipo\n   - Reutilizável em todas as páginas\n============================ */\n\nimport {\n  CLASSES_AVISO_OCULTO,\n  CLASSES_AVISO_VISIVEL,\n  MAPA_CLASSES_TIPO_AVISO,\n} from \"./constantes.js\";\nimport { ClasseAviso, IntervaloTemporizador, TipoAviso } from \"./enums.js\";\n\nconst timeoutsPorArea = new WeakMap<HTMLElement, number>();\n\n/**\n * @summary Exibe um aviso temporário na área indicada, com estilos por tipo.\n * @param areaAviso Elemento alvo que renderiza o toast (ex.: div#toast).\n * @param mensagem Texto do aviso a ser exibido.\n * @param tipo Tipo de aviso para estilização (sucesso, info, erro, etc.).\n */\nexport function exibirAviso(\n  areaAviso: HTMLDivElement,\n  mensagem: string,\n  tipo: TipoAviso = TipoAviso.Sucesso,\n): void {\n  const classesBase =\n    \"z-[9999] fixed bottom-6 right-6 min-w-3xs max-w-[calc(100%-2rem)] rounded-lg px-4 py-3 text-sm shadow-2xl transition-all duration-300 ease-out\";\n\n  areaAviso.textContent = mensagem;\n  areaAviso.className = `${classesBase} ${MAPA_CLASSES_TIPO_AVISO[tipo].join(\" \")} ${ClasseAviso.OpacidadeOculta} ${ClasseAviso.TranslacaoOculta} ${ClasseAviso.PonteiroDesativado}`;\n\n  requestAnimationFrame(() => {\n    areaAviso.classList.remove(...CLASSES_AVISO_OCULTO);\n    areaAviso.classList.add(...CLASSES_AVISO_VISIVEL);\n  });\n\n  const atual = timeoutsPorArea.get(areaAviso);\n  if (atual !== undefined) {\n    window.clearTimeout(atual);\n  }\n\n  const timeout = window.setTimeout(() => {\n    areaAviso.classList.remove(...CLASSES_AVISO_VISIVEL);\n    areaAviso.classList.add(...CLASSES_AVISO_OCULTO);\n    timeoutsPorArea.delete(areaAviso);\n  }, IntervaloTemporizador.Aviso);\n\n  timeoutsPorArea.set(areaAviso, timeout);\n}\n\nexport { TipoAviso };\n"]}