{"version":3,"file":"compilar-tailwind.js","sourceRoot":"","sources":["../../../src/processos/compilar-tailwind.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;AAClE,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACnD,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AACtD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;AAErD,SAAS,gBAAgB,CAAC,IAAc;IACpC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9E,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;QACvB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAS,QAAQ;IACb,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;QAC1B,OAAO,CAAC,KAAK,CAAC,0DAA0D,OAAO,EAAE,CAAC,CAAC;QACnF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE5C,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IAEpE,IAAI,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1B,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QACxE,CAAC;QACD,MAAM,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,OAAO,SAAS,CAAC,CAAC;IAChG,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACT,OAAO,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QACzE,MAAM,CAAC,CAAC;IACZ,CAAC;AACL,CAAC;AAED,QAAQ,EAAE,CAAC","sourcesContent":["/**\r\n * Compila o Tailwind CSS a partir de `src/estilos/tailwind.css`\r\n * e gera `dist/assets/tailwind.min.css` usando o CLI local.\r\n */\r\n\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport { execFileSync } from \"child_process\";\r\n\r\nconst raiz = process.cwd();\r\nconst entrada = path.join(raiz, \"src\", \"estilos\", \"tailwind.css\");\r\nconst saidaDir = path.join(raiz, \"dist\", \"assets\");\r\nconst saida = path.join(saidaDir, \"tailwind.min.css\");\r\nconst config = path.join(raiz, \"tailwind.config.js\");\r\n\r\nfunction construirComNode(args: string[]) {\r\n    const cliJs = path.join(raiz, \"node_modules\", \"tailwindcss\", \"lib\", \"cli.js\");\r\n    if (fs.existsSync(cliJs)) {\r\n        execFileSync(process.execPath, [cliJs, ...args], { stdio: \"inherit\" });\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction compilar(): void {\r\n    if (!fs.existsSync(entrada)) {\r\n        console.error(`[compilar-tailwind] Arquivo de entrada n√£o encontrado: ${entrada}`);\r\n        process.exit(1);\r\n    }\r\n\r\n    fs.mkdirSync(saidaDir, { recursive: true });\r\n\r\n    const args = [\"-i\", entrada, \"-o\", saida, \"-c\", config, \"--minify\"];\r\n\r\n    try {\r\n        if (!construirComNode(args)) {\r\n            execFileSync(\"npx\", [\"tailwindcss\", ...args], { stdio: \"inherit\" });\r\n        }\r\n        const tamanho = fs.existsSync(saida) ? fs.statSync(saida).size : 0;\r\n        console.log(`[compilar-tailwind] Gerado: ${path.relative(raiz, saida)} (${tamanho} bytes)`);\r\n    } catch (e) {\r\n        console.error(\"[compilar-tailwind] Falha ao compilar Tailwind via CLI.\");\r\n        throw e;\r\n    }\r\n}\r\n\r\ncompilar();\r\n"]}